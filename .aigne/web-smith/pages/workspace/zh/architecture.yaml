meta:
  title: "Blocklet 平台架构 | 技术深度解析"
  description: "探索 Blocklet 平台的强大架构。本次深度解析涵盖了核心组件、设计模式、安全原则以及面向开发者和架构师的数据流。"
  image: "mediakit://analytics-runtime-dashboard.png"
sections:
  - sectionName: "Hero"
    sectionSummary: "通过强有力的标题和简洁的摘要介绍平台架构页面，立即为开发者和架构师设定技术性和信息性的基调。"
    splitHeroTitle: "深入底层：Blocklet 平台架构"
    splitHeroDescription: "准备好深入了解了吗？让我们揭开帷幕，探索使 Blocklet 平台如此强大、可扩展且充满构建乐趣的核心组件、设计模式和安全原则！"
    splitHeroRightImage: "mediakit://analytics-runtime-dashboard.png"
    splitHeroActions:
      - text: ""
        link: ""
      - text: ""
        link: ""
  - sectionName: "CoreComponentsGrid"
    sectionSummary: "提供平台六个核心组件的高级、可快速浏览的概览，让用户在深入了解细节之前快速掌握生态系统结构。"
    threeColumnGridTitle: "平台支柱"
    list:
      - sectionName: "ComponentCardServer"
        sectionSummary: "将 Blocklet Server 作为基础运行时环境进行介绍。"
        iconName: "mdi:server"
        cardTitle: "Blocklet Server"
        cardDescription: "基础运行时环境。它就像是 Blocklet 的操作系统，处理从部署到安全的所有事务，让您可以专注于创造。"
      - sectionName: "ComponentCardServices"
        sectionSummary: "重点介绍作为一套可复用、内置功能的 Blocklet Services。"
        iconName: "mdi:cogs"
        cardTitle: "Blocklet Services"
        cardDescription: "您的预置功能工具箱！标准化的服务，如身份验证、通知和主题，任何 Blocklet 都可以使用。无需再重复造轮子！"
      - sectionName: "ComponentCardFramework"
        sectionSummary: "将 Blocklet Framework (meta) 解释为核心规范和规则手册。"
        iconName: "mdi:code-braces"
        cardTitle: "Blocklet Framework"
        cardDescription: "每个 Blocklet 的蓝图。这是定义、验证和管理元数据的核心库，它使整个生态系统能够无缝地协同工作。"
      - sectionName: "ComponentCardCLI"
        sectionSummary: "将 Blocklet CLI 作为开发者的主要命令行工具进行介绍。"
        iconName: "mdi:console"
        cardTitle: "Blocklet CLI"
        cardDescription: "您的全权控制指挥中心。从搭建新项目到管理线上服务器，CLI 让整个开发生命周期尽在您的掌握之中。"
      - sectionName: "ComponentCardSDKNode"
        sectionSummary: "详细介绍用于强大后端开发的 Node.js SDK。"
        iconName: "mdi:nodejs"
        cardTitle: "Node.js SDK"
        cardDescription: "后端所需的一切。通过一套丰富的服务器端工具，集成身份验证、调用平台服务以及管理数据。"
      - sectionName: "ComponentCardSDKBrowser"
        sectionSummary: "展示用于创建动态前端体验的浏览器 SDK。"
        iconName: "mdi:web"
        cardTitle: "浏览器 SDK"
        cardDescription: "让您的前端充满活力！此客户端 SDK 可直接在浏览器中处理会话管理、API 调用和跨 Blocklet 通信。"
  - sectionName: "ArchitecturePatterns"
    sectionSummary: "重点介绍支撑平台设计的关键架构模式，通过解释结构背后的“为什么”来吸引架构师和高级开发人员。"
    threeColumnGridTitle: "构建于坚实基础之上"
    list:
      - sectionName: "PatternCardCleanArchitecture"
        sectionSummary: "解释使用整洁架构以实现可维护性。"
        iconName: "mdi:layers-triple"
        cardTitle: "整洁架构"
        cardDescription: "我们通过明确的关注点分离来保持代码整洁。这意味着平台更易于维护、扩展和延伸，为您提供一个稳定的构建基础。"
      - sectionName: "PatternCardMicroservices"
        sectionSummary: "描述用于实现可扩展性和独立性的微服务设计。"
        iconName: "mdi:sitemap"
        cardTitle: "微服务设计"
        cardDescription: "每个 Blocklet 都是一个独立的微服务。这为您提供了极大的灵活性，允许组件被独立开发、部署和扩展。"
      - sectionName: "PatternCardEventDriven"
        sectionSummary: "详细介绍用于实时通信的事件驱动方法。"
        iconName: "mdi:webhook"
        cardTitle: "事件驱动架构"
        cardDescription: "感受实时脉动！借助 WebSockets 和中央事件中心，组件之间可以无缝、高效地通信，非常适合构建动态、交互式的体验。"
  - sectionName: "SecurityArchitecture"
    sectionSummary: "重点关注平台的强大安全特性，通过展示保护应用程序和数据的多层次方法来建立信任。"
    featureSectionTitle: "安全不是事后弥补，而是重中之重"
    featureSectionDescription: "我们将企业级安全融入到每一层。从去中心化身份（DID）和 JWTs 到 Web 应用防火墙（WAF）和进程隔离，您可以充满信心地进行构建，因为您的应用和用户都受到了保护。"
    featureSectionBottomImage: "mediakit://settings-gateway-configuration.png"
    featureSectionAction:
      text: "探索服务器安全功能"
      link: "link:///server"
  - sectionName: "DeploymentAndStorage"
    sectionSummary: "详细介绍平台的灵活部署和存储选项，解决开发者和系统管理员的关键运营问题。"
    twoColumnGridTitle: "按您的方式部署和存储"
    list:
      - sectionName: "DeploymentOptionsCard"
        sectionSummary: "概述了可用的各种部署模型。"
        cardDescription: "无论您是为个人项目使用单台服务器，还是使用高可用性集群或云原生 K8s 环境，平台都能适应您的需求。此外，还能享受零停机更新！"
        cardTitle: "灵活部署"
        iconName: "mdi:cloud-upload"
      - sectionName: "StorageOptionsCard"
        sectionSummary: "解释支持的存储引擎 SQLite 和 PostgreSQL。"
        cardDescription: "开发时可从零配置的 SQLite 简单入手，当您准备好扩展时，可以无缝迁移到生产级的 PostgreSQL 以获得卓越的性能和可扩展性。"
        cardTitle: "可扩展存储"
        iconName: "mdi:database"
  - sectionName: "DeveloperWorkflow"
    sectionSummary: "提供一个实用的、代码优先的开发生命周期视图，通过一个 CLI 命令的实践示例直接吸引开发者。"
    verticalHeroTitle: "从零到部署，速度超乎想象"
    verticalHeroDescription: "体验流畅无阻的开发工作流。借助我们强大的 CLI，您只需几个简单的命令即可初始化、进行热重载开发并部署您的应用程序。就是这么简单！"
    verticalHeroCode:
      name: "bash"
      content: "# 1. 从模板初始化一个新的 Blocklet\nblocklet init my-app --template react\n\n# 2. 运行本地开发服务器\nblocklet dev\n\n# 3. 为生产环境打包您的应用\nblocklet bundle\n\n# 4. 将其部署到您的服务器！\nblocklet deploy .blocklet/bundle --endpoint https://my-server.com"
  - sectionName: "Faq"
    sectionSummary: "预测并回答关于平台架构的常见技术问题，阐明关键概念，减少评估者的不确定性。"
    faqTitle: "常见问题"
    faqList:
      - question: "平台如何实现零停机更新？"
        answer: "我们使用了一套成熟的平滑重载系统！当您更新服务器或 Blocklet 时，新代码会被加载而不会断开活动连接或中断请求，从而确保您的服务保持在线。"
      - question: "Blocklet Server 和 Blocklet Services 有什么区别？"
        answer: "可以将 Blocklet Server 看作是运行一切的操作系统。而 Blocklet Services 就像是该操作系统上的内置工具应用（例如，用于身份验证或通知），任何其他应用都可以使用它们。"
      - question: "不同的 Blocklet 之间如何通信？"
        answer: "通信通过中央 API 网关和服务发现进行。这使得 Blocklet 能够找到彼此并安全地进行通信，可以通过直接的 API 调用，也可以通过异步的、基于事件的消息传递。"
      - question: "主要的性能优化策略有哪些？"
        answer: "我们在各个层面都进行了优化！在前端，我们使用代码分割和 Service Worker。在后端，我们使用连接池和缓存层。在基础设施层面，我们支持 CDN 和 HTTP/2 以实现闪电般的交付速度。"
  - sectionName: "Cta"
    sectionSummary: "提供清晰、引人注目的行动号召，引导用户进入下一个合乎逻辑的步骤，无论是探索其他组件还是深入研究文档。"
    ctaTitle: "准备好在现代架构上构建了吗？"
    ctaDescription: "您已经了解了它的工作原理，现在来看看您能创造什么吧。更详细地探索核心组件，或者直接跳到开发者文档，立即开始构建您的第一个 Blocklet！"
    cta:
      - text: "探索所有组件"
        link: "link:///home"
      - text: ""
        link: ""