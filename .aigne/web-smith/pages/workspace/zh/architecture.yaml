meta:
  title: "Blocklet 平台架构 | 面向开发者的技术深度解析"
  description: "对 Blocklet 平台架构的技术深度解析，涵盖其核心组件、微服务设计、整洁架构原则和安全模式。是开发者和系统架构师的理想选择。"
sections:
  - sectionName: "architectureHero"
    sectionSummary: "对平台架构的有力介绍，为技术受众奠定自信且引人入胜的基调。"
    splitHeroTitle: "现代去中心化应用的蓝图"
    splitHeroDescription: "准备好深入了解了吗？探索驱动 Blocklet 平台的强大、可扩展且安全的架构。了解我们的微服务设计、整洁架构和基于 DID 的安全性如何为您提供卓越的构建基础。"
    splitHeroActions:
      - text: "探索核心组件"
        link: "link:///home"
      - text: "查看文档"
        link: "https://docs.arcblock.io"
    splitHeroRightImage: "mediakit://analytics-runtime-dashboard.png"
  - sectionName: "coreComponentsGrid"
    sectionSummary: "介绍平台的关键构建模块，提供每个组件角色和功能的高层概述。"
    threeColumnGridTitle: "了解核心组件"
    list:
      - sectionName: "blockletServerCard"
        sectionSummary: "重点介绍作为基础运行时环境的 Blocklet Server。"
        contentCardTitle: "Blocklet Server"
        contentCardDescription: "基础运行时。为您构建和运行的每个 Blocklet 提供安全、可扩展的操作系统。"
        contentCardBottomImage: "mediakit://blocklets-management-list.png"
      - sectionName: "blockletServiceCard"
        sectionSummary: "重点介绍可重用的、开箱即用的 Blocklet Services。"
        contentCardTitle: "Blocklet Service"
        contentCardDescription: "标准化的可重用服务，如身份验证和通知，可供您即时使用。"
        contentCardBottomImage: "mediakit://service-blocklets-overview.png"
      - sectionName: "blockletSdkCard"
        sectionSummary: "介绍用于后端和前端开发的强大 SDK。"
        contentCardTitle: "Blocklet SDK"
        contentCardDescription: "强大的 Node.js 和浏览器 SDK，可轻松将您的应用连接到整个生态系统。"
        contentCardBottomImage: "mediakit://cli-server-start-output.png"
      - sectionName: "blockletCliCard"
        sectionSummary: "展示用于完全开发者控制的命令行界面。"
        contentCardTitle: "Blocklet CLI"
        contentCardDescription: "您的命令行利器，用于开发、部署和完整的服务器管理。"
        contentCardBottomImage: "mediakit://cli-help-main-commands.png"
      - sectionName: "blockletStoreCard"
        sectionSummary: "将 Blocklet Store 呈现为去中心化应用市场。"
        contentCardTitle: "Blocklet Store"
        contentCardDescription: "去中心化市场，一键发现、发布和部署强大的 Blocklet。"
        contentCardBottomImage: "mediakit://explore-trending-blocklets.png"
      - sectionName: "blockletLauncherCard"
        sectionSummary: "为无代码用户体验解释 Blocklet Launcher。"
        contentCardTitle: "Blocklet Launcher"
        contentCardDescription: "为用户提供的简化、无代码体验，以极致简单的方式启动和管理应用。"
        contentCardBottomImage: "mediakit://purchase-space-subscription.jpg"
  - sectionName: "architecturePatterns"
    sectionSummary: "重点介绍使平台稳健、可扩展和可维护的关键软件设计模式。"
    threeColumnGridTitle: "基于成熟原则构建"
    list:
      - sectionName: "cleanArchitectureCard"
        sectionSummary: "解释整洁架构在可维护性方面的好处。"
        cardTitle: "整洁架构"
        cardDescription: "确保关注点清晰分离，使您的应用极易测试，维护起来得心应手。"
        iconName: "mdi:layers-triple"
      - sectionName: "microservicesCard"
        sectionSummary: "详细介绍用于灵活性和可扩展性的微服务设计。"
        cardTitle: "微服务设计"
        cardDescription: "每个 Blocklet 都是一个独立的微服务，从一开始就为您提供惊人的灵活性和可扩展性。"
        iconName: "mdi:sitemap"
      - sectionName: "eventDrivenCard"
        sectionSummary: "描述用于实现解耦和响应式系统的事件驱动模型。"
        cardTitle: "事件驱动"
        cardDescription: "组件通过中央事件中心进行通信，创建了一个完美解耦且响应迅速的系统。"
        iconName: "mdi:broadcast"
  - sectionName: "securityArchitecture"
    sectionSummary: "通过详细介绍内置于平台核心的多层、企业级安全模型来建立开发者的信任。"
    featureSectionTitle: "安全不是事后弥补，而是基石"
    featureSectionDescription: "从消除密码的基于 DID 的身份验证，到 mod_security WAF 和进程隔离，我们将企业级安全构建到每一层。您可以充满信心地进行构建，因为您知道您的应用和用户从第一天起就受到保护。"
    featureSectionBottomImage: "mediakit://settings-gateway-configuration.png"
  - sectionName: "developmentWorkflow"
    sectionSummary: "通过实用、可操作的代码示例，引导开发者了解端到端的开发和部署生命周期。"
    oneColumnGridTitle: "完整的开发与部署生命周期"
    list:
      - sectionName: "initAndDevelop"
        sectionSummary: "展示初始项目设置和本地开发体验。"
        contentCardTitle: "1. 初始化与开发"
        contentCardDescription: "从模板快速启动一个新项目，并立即进入一个有趣、支持热重载的开发环境。"
        contentCardBottomCode:
          name: "bash"
          content: "blocklet init my-app --template react\nblocklet dev"
      - sectionName: "bundleAndDeploy"
        sectionSummary: "演示打包和部署应用程序是多么容易。"
        contentCardTitle: "2. 打包与部署"
        contentCardDescription: "将您的应用打包用于生产环境，并通过一个命令将其部署到任何 Blocklet Server 实例。"
        contentCardBottomCode:
          name: "bash"
          content: "blocklet bundle\nblocklet deploy .blocklet/bundle --endpoint https://myserver.com"
      - sectionName: "manageServer"
        sectionSummary: "重点介绍用于监控和维护的服务器管理命令。"
        contentCardTitle: "3. 管理您的服务器"
        contentCardDescription: "密切关注您的服务器健康状况，检查 Blocklet 状态，并直接从终端流式传输日志。"
        contentCardBottomCode:
          name: "bash"
          content: "blocklet server status\nblocklet server logs"
      - sectionName: "publishToStore"
        sectionSummary: "解释将 Blocklet 发布到商店的最后一步。"
        contentCardTitle: "4. 发布到商店"
        contentCardDescription: "连接到 Blocklet Store 并上传您打包好的应用，与世界分享！"
        contentCardBottomCode:
          name: "bash"
          content: "blocklet connect https://store.blocklet.io\nblocklet upload .blocklet/bundle"
  - sectionName: "deploymentArchitecture"
    sectionSummary: "通过概述从单服务器到云原生集群等不同部署场景，展示平台的多功能性。"
    threeColumnGridTitle: "随处部署，任意规模"
    list:
      - sectionName: "singleServerDeployment"
        sectionSummary: "描述简单的一体化部署选项。"
        cardTitle: "单服务器"
        cardDescription: "非常适合入门。在单台机器上运行整个平台，使用嵌入式 SQLite 数据库。"
        iconName: "mdi:server"
      - sectionName: "clusteredDeployment"
        sectionSummary: "解释如何为生产工作负载进行横向扩展。"
        cardTitle: "集群"
        cardDescription: "通过 Nginx 负载均衡、复制的 PostgreSQL 数据库和共享网络存储进行横向扩展。"
        iconName: "mdi:server-network"
      - sectionName: "cloudNativeDeployment"
        sectionSummary: "重点介绍对现代云原生环境的支持。"
        cardTitle: "云原生"
        cardDescription: "通过 Docker 和 Kubernetes 支持、兼容 S3 的存储以及集成的云监控实现大规模部署。"
        iconName: "mdi:cloud"
  - sectionName: "architectureFaq"
    sectionSummary: "主动解答关于平台架构的常见技术问题，以阐明关键概念和优势。"
    faqTitle: "架构常见问题解答"
    faqList:
      - question: "平台如何处理数据存储？"
        answer: "它非常灵活！默认情况下，它使用嵌入式 SQLite 数据库，非常适合单服务器设置。对于更大规模的集群部署，您可以轻松切换到 PostgreSQL 以获得卓越的性能和可扩展性。"
      - question: "什么是“平滑重载”，它为什么重要？"
        answer: "这是我们的零停机更新系统！它允许您在不中断任何活动连接的情况下更新服务器或单个 Blocklet。这意味着您可以随时部署更新而不会打扰用户——这对可用性而言是颠覆性的改变。"
      - question: "Blocklet 之间的通信是如何工作的？"
        answer: "Blocklet 通过中央 API 网关和异步事件消息系统进行通信。这使它们能够自动发现彼此并安全地进行交互，而无需紧密耦合，遵循了微服务设计的最佳实践。"
      - question: "包含了哪些监控和可观测性工具？"
        answer: "该平台专为生产环境而构建！它包括结构化的 JSON 日志记录、实时性能和资源指标（CPU、内存等）以及可配置的警报。您将获得保持系统健康所需的所有洞察。"
  - sectionName: "architectureCta"
    sectionSummary: "最后，一个充满活力的行动号召，鼓励开发者迈出下一步，开始在平台上构建。"
    ctaTitle: "准备好在更坚实的基础上构建了吗？"
    ctaDescription: "架构坚实，工具就绪，可能性无穷。立即深入文档或获取 CLI，开始构建您的第一个 Blocklet！"
    cta:
      - text: "探索文档"
        link: "https://docs.arcblock.io"
      - text: "立即开始"
        link: "link:///blocklet-cli"