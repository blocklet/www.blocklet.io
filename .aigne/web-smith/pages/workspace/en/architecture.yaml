meta:
  title: "Blocklet Platform Architecture | A Technical Deep Dive"
  description: "Explore the robust architecture of the Blocklet Platform. This deep dive covers core components, design patterns, security principles, and data flows for developers and architects."
  image: "mediakit://analytics-runtime-dashboard.png"
sections:
  - sectionName: "Hero"
    sectionSummary: "Introduces the Platform Architecture page with a strong title and a concise summary, immediately setting a technical and informative tone for developers and architects."
    splitHeroTitle: "Under the Hood: The Blocklet Platform Architecture"
    splitHeroDescription: "Ready for a deep dive? Let's pull back the curtain and explore the core components, design patterns, and security principles that make the Blocklet Platform so powerful, scalable, and fun to build on!"
    splitHeroRightImage: "mediakit://analytics-runtime-dashboard.png"
    splitHeroActions:
      - text: ""
        link: ""
      - text: ""
        link: ""
  - sectionName: "CoreComponentsGrid"
    sectionSummary: "Provides a high-level, scannable overview of the six core components of the platform, allowing users to quickly grasp the ecosystem's structure before diving into details."
    threeColumnGridTitle: "The Pillars of the Platform"
    list:
      - sectionName: "ComponentCardServer"
        sectionSummary: "Introduces the Blocklet Server as the foundational runtime environment."
        iconName: "mdi:server"
        cardTitle: "Blocklet Server"
        cardDescription: "The foundational runtime environment. It's like the OS for your blocklets, handling everything from deployment to security so you can just focus on creating."
      - sectionName: "ComponentCardServices"
        sectionSummary: "Highlights Blocklet Services as a suite of reusable, built-in functionalities."
        iconName: "mdi:cogs"
        cardTitle: "Blocklet Services"
        cardDescription: "Your toolkit of pre-built power! Standardized services like auth, notifications, and theming that any blocklet can use. Stop reinventing the wheel!"
      - sectionName: "ComponentCardFramework"
        sectionSummary: "Explains the Blocklet Framework (meta) as the core specification and rulebook."
        iconName: "mdi:code-braces"
        cardTitle: "Blocklet Framework"
        cardDescription: "The blueprint for every blocklet. This is the core library that defines, validates, and manages the metadata that makes the whole ecosystem work together seamlessly."
      - sectionName: "ComponentCardCLI"
        sectionSummary: "Introduces the Blocklet CLI as the primary command-line tool for developers."
        iconName: "mdi:console"
        cardTitle: "Blocklet CLI"
        cardDescription: "Your command center for total control. From scaffolding new projects to managing a live server, the CLI puts the entire development lifecycle at your fingertips."
      - sectionName: "ComponentCardSDKNode"
        sectionSummary: "Details the Node.js SDK for powerful backend development."
        iconName: "mdi:nodejs"
        cardTitle: "Node.js SDK"
        cardDescription: "Everything you need for the backend. Integrate authentication, tap into platform services, and manage data with a rich set of server-side tools."
      - sectionName: "ComponentCardSDKBrowser"
        sectionSummary: "Showcases the Browser SDK for creating dynamic frontend experiences."
        iconName: "mdi:web"
        cardTitle: "Browser SDK"
        cardDescription: "Bring your frontend to life! This client-side SDK handles session management, API calls, and cross-blocklet communication right in the browser."
  - sectionName: "ArchitecturePatterns"
    sectionSummary: "Highlights the key architectural patterns that underpin the platform's design, appealing to architects and senior developers by explaining the 'why' behind the structure."
    threeColumnGridTitle: "Built on a Solid Foundation"
    list:
      - sectionName: "PatternCardCleanArchitecture"
        sectionSummary: "Explains the use of Clean Architecture for maintainability."
        iconName: "mdi:layers-triple"
        cardTitle: "Clean Architecture"
        cardDescription: "We keep things tidy with a clear separation of concerns. This means the platform is easier to maintain, scale, and extend, giving you a stable foundation to build on."
      - sectionName: "PatternCardMicroservices"
        sectionSummary: "Describes the microservices design for scalability and independence."
        iconName: "mdi:sitemap"
        cardTitle: "Microservices Design"
        cardDescription: "Each blocklet is an independent microservice. This gives you incredible flexibility, allowing components to be developed, deployed, and scaled independently."
      - sectionName: "PatternCardEventDriven"
        sectionSummary: "Details the event-driven approach for real-time communication."
        iconName: "mdi:webhook"
        cardTitle: "Event-Driven Architecture"
        cardDescription: "Feel the real-time buzz! With WebSockets and a central event hub, components communicate seamlessly and efficiently, perfect for building dynamic, interactive experiences."
  - sectionName: "SecurityArchitecture"
    sectionSummary: "Focuses on the platform's robust security features, building trust by showcasing the multi-layered approach to protecting applications and data."
    featureSectionTitle: "Security is Not an Afterthought, It's the Main Event"
    featureSectionDescription: "We've baked enterprise-grade security into every layer. From Decentralized Identity (DID) and JWTs to a Web Application Firewall (WAF) and process isolation, you can build with confidence knowing your apps and users are protected."
    featureSectionBottomImage: "mediakit://settings-gateway-configuration.png"
    featureSectionAction:
      text: "Explore Server Security Features"
      link: "link:///server"
  - sectionName: "DeploymentAndStorage"
    sectionSummary: "Details the platform's flexible deployment and storage options, addressing key operational concerns for developers and system administrators."
    twoColumnGridTitle: "Deploy and Store Your Way"
    list:
      - sectionName: "DeploymentOptionsCard"
        sectionSummary: "Outlines the various deployment models available."
        cardDescription: "Whether you're on a single server for a passion project, a high-availability cluster, or a cloud-native K8s setup, the platform adapts to your needs. Plus, enjoy zero-downtime updates!"
        cardTitle: "Flexible Deployment"
        iconName: "mdi:cloud-upload"
      - sectionName: "StorageOptionsCard"
        sectionSummary: "Explains the supported storage engines, SQLite and PostgreSQL."
        cardDescription: "Start simple with zero-config SQLite for development, and seamlessly migrate to production-grade PostgreSQL for superior performance and scalability when you're ready to grow."
        cardTitle: "Extensible Storage"
        iconName: "mdi:database"
  - sectionName: "DeveloperWorkflow"
    sectionSummary: "Provides a practical, code-first look at the development lifecycle, directly engaging developers with a hands-on example of the CLI commands."
    verticalHeroTitle: "Go from Zero to Deployed, Faster Than Ever"
    verticalHeroDescription: "Experience a development workflow that just flows. With our powerful CLI, you can initialize, develop with hot-reloading, and deploy your application using just a few simple commands. It's that easy!"
    verticalHeroCode:
      name: "bash"
      content: "# 1. Initialize a new blocklet from a template\nblocklet init my-app --template react\n\n# 2. Run the local development server\nblocklet dev\n\n# 3. Bundle your app for production\nblocklet bundle\n\n# 4. Deploy it to your server!\nblocklet deploy .blocklet/bundle --endpoint https://my-server.com"
  - sectionName: "Faq"
    sectionSummary: "Anticipates and answers common technical questions about the platform's architecture, providing clarity on key concepts and reducing uncertainty for evaluators."
    faqTitle: "Frequently Asked Questions"
    faqList:
      - question: "How does the platform achieve zero-downtime updates?"
        answer: "We use a sophisticated graceful reload system! When you update the server or a blocklet, new code is loaded without dropping active connections or interrupting requests, ensuring your service stays online."
      - question: "What's the difference between Blocklet Server and Blocklet Services?"
        answer: "Think of Blocklet Server as the operating system that runs everything. Blocklet Services are like built-in utility apps on that OS (e.g., for authentication or notifications) that any other app can use."
      - question: "How do different blocklets communicate with each other?"
        answer: "Communication happens through a central API gateway and service discovery. This allows blocklets to find and securely talk to each other, either through direct API calls or asynchronous, event-based messaging."
      - question: "What are the main performance optimization strategies?"
        answer: "We optimize at every level! On the frontend, we use code splitting and service workers. On the backend, we use connection pooling and caching layers. And at the infrastructure level, we support CDNs and HTTP/2 for lightning-fast delivery."
  - sectionName: "Cta"
    sectionSummary: "Provides clear, compelling calls-to-action that guide the user to their next logical step, whether it's exploring other components or diving into the documentation."
    ctaTitle: "Ready to Build on a Modern Architecture?"
    ctaDescription: "You've seen how it works, now see what you can create. Explore the core components in more detail or jump straight into the developer documentation and start building your first blocklet today!"
    cta:
      - text: "Explore All Components"
        link: "link:///home"
      - text: ""
        link: ""