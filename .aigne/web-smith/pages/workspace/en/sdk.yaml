meta:
  title: "Blocklet SDK | Developer Kits for Node.js & Browser"
  description: "Use the Blocklet Node.js and Browser SDKs to easily integrate your apps with Blocklet Server, manage DID authentication, and access powerful platform services."
sections:
  - sectionName: "sdkHero"
    sectionSummary: "Grab developer attention immediately with a clear headline and a simple, powerful code snippet showing how easy it is to get started with the Blocklet SDK."
    verticalHeroTitle: "Build Powerful Blocklets, Faster. Your Toolkit for Node.js & Browser."
    verticalHeroDescription: "Stop reinventing the wheel. Leverage a suite of built-in services for Decentralized Identity (DID), notifications, data storage, and more. Focus on your application's unique features, and let the SDK handle the rest."
    verticalHeroCode:
      name: "main.js"
      content: "import { BlockletSDK } from '@blocklet/js-sdk';\n\nconst sdk = new BlockletSDK();\n\nasync function getUser() {\n  await sdk.user.login();\n  const userInfo = await sdk.user.getProfile();\n  console.log(userInfo);\n}"
  - sectionName: "sdkIntroduction"
    sectionSummary: "Introduce the two distinct SDKs (Node.js and Browser) side-by-side, clarifying their purpose and target environment to help developers quickly identify the right tool for their needs."
    list:
      - sectionName: "nodejsSdkCard"
        sectionSummary: "Detail the Node.js SDK for backend development, highlighting its key capabilities and providing a concise code example to demonstrate its usage."
        contentCardTitle: "Node.js SDK: Power Your Backend"
        contentCardDescription: "The server-side SDK for all your backend needs. Handle authentication, manage data, send notifications, and integrate deeply with Blocklet Server services from your Node.js environment."
        contentCardBottomCode:
          name: "server.js"
          content: "import { BlockletService, getWallet } from '@blocklet/sdk';\n\n// Access blocklet's own DID wallet\nconst wallet = getWallet();\n\n// Perform cryptographic operations\nconst signature = await wallet.sign('hello world');"
      - sectionName: "browserSdkCard"
        sectionSummary: "Detail the Browser SDK for frontend development, showcasing its features for creating dynamic user experiences and providing a simple code snippet."
        contentCardTitle: "Browser SDK: Energize Your Frontend"
        contentCardDescription: "The client-side SDK for your web applications. Manage user sessions, handle DID Connect flows, communicate with other blocklets, and make secure API calls with ease."
        contentCardBottomCode:
          name: "app.js"
          content: "import { BlockletSDK } from '@blocklet/js-sdk';\n\nconst sdk = new BlockletSDK();\n\n// Get info about the current blocklet\nconst info = await sdk.blocklet.getInfo();\nconsole.log(info.name);"
    twoColumnGridTitle: ""
  - sectionName: "nodejsFeatures"
    sectionSummary: "Showcase the key features of the Node.js SDK in a scannable grid, highlighting the powerful, out-of-the-box capabilities developers get for their backend."
    threeColumnGridTitle: "What's Inside the Node.js SDK?"
    list:
      - sectionName: "authFeature"
        sectionSummary: "Highlight the comprehensive authentication features of the Node.js SDK."
        iconName: "mdi:shield-lock-outline"
        cardTitle: "Authentication & Security"
        cardDescription: "Integrate multi-channel authentication including DID, Passkey, OAuth, and email. Manage JWTs and role-based access with ease."
      - sectionName: "walletFeature"
        sectionSummary: "Showcase the built-in DID wallet integration for cryptographic operations."
        iconName: "mdi:wallet-outline"
        cardTitle: "Wallet Integration"
        cardDescription: "Access the blocklet's internal DID wallet to perform cryptographic operations like signing data and verifying credentials."
      - sectionName: "databaseFeature"
        sectionSummary: "Explain the simple, embedded database solution provided by the SDK."
        iconName: "mdi:database-outline"
        cardTitle: "Database Service"
        cardDescription: "Utilize the built-in NeDB embedded database for simple, file-based data persistence without external dependencies."
      - sectionName: "notificationFeature"
        sectionSummary: "Detail the multi-channel notification capabilities for user engagement."
        iconName: "mdi:bell-ring-outline"
        cardTitle: "Notification Service"
        cardDescription: "Send rich, interactive notifications to users' DID Wallets, browsers, or other channels like email and Slack."
      - sectionName: "middlewareFeature"
        sectionSummary: "Highlight the convenience of pre-built middleware for web frameworks."
        iconName: "mdi:layers-triple-outline"
        cardTitle: "Express Middleware"
        cardDescription: "Drop in ready-to-use middleware for Express.js to handle request verification and inject runtime info automatically."
      - sectionName: "loggingFeature"
        sectionSummary: "Showcase the structured logging for easier debugging and monitoring."
        iconName: "mdi:math-log"
        cardTitle: "Structured Logging"
        cardDescription: "Implement structured logging with configurable debug levels to easily monitor and troubleshoot your application."
  - sectionName: "browserFeatures"
    sectionSummary: "Showcase the key features of the Browser SDK, focusing on how it simplifies frontend development tasks like session management and API communication."
    threeColumnGridTitle: "What's Inside the Browser SDK?"
    list:
      - sectionName: "clientAuthFeature"
        sectionSummary: "Highlight the frontend authentication services for seamless user login."
        iconName: "mdi:login"
        cardTitle: "Authentication Service"
        cardDescription: "Effortlessly manage frontend authentication flows, user profiles, and secure login states with DID Connect."
      - sectionName: "sessionFeature"
        sectionSummary: "Explain how the SDK manages client-side user sessions."
        iconName: "mdi:account-clock-outline"
        cardTitle: "Session Management"
        cardDescription: "Handle client-side session state, including persistence across browser sessions and secure user context."
      - sectionName: "apiClientFeature"
        sectionSummary: "Showcase the pre-configured, secure HTTP client for API calls."
        iconName: "mdi:api"
        cardTitle: "Secure API Client"
        cardDescription: "Make secure, authenticated API calls using a pre-configured Axios client with built-in interceptors for CSRF and token handling."
      - sectionName: "federatedFeature"
        sectionSummary: "Detail the capabilities for communication between different blocklets."
        iconName: "mdi:arrow-decision-outline"
        cardTitle: "Federated Services"
        cardDescription: "Enable secure, cross-blocklet communication, allowing your frontend to interact with services from other blocklets."
      - sectionName: "tokenFeature"
        sectionSummary: "Explain the automatic JWT token management for developers' convenience."
        iconName: "mdi:key-chain"
        cardTitle: "Token Management"
        cardDescription: "Forget about token headaches. The SDK handles automatic token refresh and secure cookie-based storage for you."
      - sectionName: "cacheFeature"
        sectionSummary: "Highlight the performance benefits of the built-in caching layer."
        iconName: "mdi:memory"
        cardTitle: "Performance Caching"
        cardDescription: "Leverage a built-in LRU cache to optimize performance by reducing redundant requests for frequently accessed data."
  - sectionName: "sdkFaq"
    sectionSummary: "Proactively answer common developer questions to build confidence and reduce support overhead. This section clarifies installation, compatibility, and where to find more detailed information."
    faqTitle: "Frequently Asked Questions"
    faqList:
      - question: "How do I install the SDKs?"
        answer: "It's a snap! You can install them via your favorite package manager. For Node.js, run `npm install @blocklet/sdk`. For the browser, use `npm install @blocklet/js-sdk`."
      - question: "Do the SDKs support TypeScript?"
        answer: "Absolutely! Both SDKs are written in TypeScript and come with complete type definitions out of the box for a fantastic, type-safe development experience."
      - question: "Can I use the SDK outside of a Blocklet?"
        answer: "The SDKs are purpose-built for the Blocklet Server environment. They're deeply integrated with its services for authentication, configuration, and more, so they won't work standalone."
      - question: "Where can I find the full API documentation?"
        answer: "Our comprehensive developer documentation has a full API reference, getting-started guides, and practical examples. Hit the 'Read the Docs' button below to dive in!"
      - question: "Is there a community or support channel?"
        answer: "Yes! Join our community forum to ask questions, share what you're building, and connect with other developers. We're always excited to see what you create!"
  - sectionName: "sdkCta"
    sectionSummary: "Drive developers to take the next step with a clear and compelling call to action. This final section encourages immediate engagement with the documentation or community."
    ctaTitle: "Ready to Start Building?"
    ctaDescription: "Dive into the documentation, explore the source code, and see what you can create with the Blocklet SDKs. Your next great application starts right here, right now!"
    cta:
      - text: "Read the Docs"
        link: "https://docs.blocklet.io/"
      - text: "View on GitHub"
        link: "https://github.com/ArcBlock/blocklet-sdk"
